Notes on HTML Layout Concepts (Using Only <div>)
=================================================

1️⃣ How to Stack Sections Vertically (Top to Bottom):
===========================================

1) By default, a <div> is a block-level element.

2) Block-level elements occupy the full width of the container and automatically stack on top of one another.

3) When you place multiple <div> tags one after the other in your HTML, they appear vertically like layers — one on top of the other.

4) This is the natural way to create sections such as a header, content area, and footer.


2️⃣ How to Arrange Elements Horizontally (Side by Side)
=============================================

1) To place <div> tags side by side, you need to override their default behavior using CSS.

2) One common way is to use the “inline-block” display type.

3) This tells the browser to treat the <div> as something that can sit next to other elements, as long as there’s enough space.

4) You can control the space each element occupies by setting widths and adding margins or padding between them.

5) This is commonly used for layouts like two-column sections or placing cards next to each other.



3️⃣ How to Properly Nest <div> Tags
===============================

1) Nesting means placing one <div> inside another.

2) This is useful when grouping related content together.

3) For example, a card component might have a parent <div> that wraps child <div>s for the title, content, and button.

4) Proper nesting improves readability, maintainability, and styling control of your layout.

5) Always ensure that every opening <div> tag has a matching closing tag to avoid rendering issues.



4️⃣ Difference Between Block-Level and Inline-Block Layouts
================================================


Block-Level:
=========

Takes up the full available width of its container.

Always starts on a new line.

Ideal for sections, containers, rows, and structure.


Inline-Block:
==========

Sits next to other elements if there’s room.

Respects width and height settings (unlike inline elements).

Commonly used for layouts that need side-by-side content, like navigation links or column layouts.



✅Notes:
=========

1) Use block-level <div>s to stack elements vertically.

2) Use inline-block styling to place elements side by side.

3) Nest <div>s for organized and modular layout structures.

4) Understand the difference between block and inline-block to choose the right display behavior for your layout.